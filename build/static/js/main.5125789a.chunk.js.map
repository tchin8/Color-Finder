{"version":3,"sources":["Typeahead.jsx","index.js"],"names":["Typeahead","props","state","input","backgroundColor","hideList","list","filterColors","bind","handleFocus","handleKeyDown","handleClickOutside","handleClick","document","addEventListener","this","e","inputEle","getElementsByTagName","liColorsEle","getElementsByClassName","key","i","length","li","activeElement","setState","getAttribute","toLowerCase","focus","setTimeout","blur","Array","from","some","l","field","target","value","colorsList","errorMsg","split","char","search","startsWith","slice","filter","map","bold","normal","className","tabIndex","id","style","type","placeholder","onFocus","onChange","update","React","Component","root","getElementById","ReactDOM","render"],"mappings":"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,UAAU,QACb,0BAAMA,UAAU,SAAhB,4BACA,yBAAKA,UAAU,gBACb,8CACA,0BAAMA,UAAU,SAAhB,0CAGA,0BAAMA,UAAU,YAAhB,sBACqB,qCADrB,QAC0C,4CAE1C,0BAAMA,UAAU,kBAAhB,OACM,uCADN,eAIF,2BACEI,KAAK,OACLC,YAAY,kCACZjB,MAAOnC,EACP+C,UACEX,GAAcA,EAAWhB,SAAWlB,EAAW,YAAc,GAE/DmD,QAASzC,KAAKN,YACdgD,SAAU1C,KAAK2C,OAAO,WAEvBnB,IAAelC,EACd,wBAAI6C,UAAU,eAAeX,GAC3B,KACHC,S,GAxKWmB,IAAMC,WCCxBrB,EAAa,CACjB,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,eAGF1B,SAASC,iBAAiB,oBAAoB,WAC5C,IAAM+C,EAAOhD,SAASiD,eAAe,QACrCC,IAASC,OAAO,kBAAC,EAAD,CAAW1D,KAAMiC,IAAesB,Q","file":"static/js/main.5125789a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n\nclass Typeahead extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      backgroundColor: 'white',\n      hideList: false,\n    }\n\n    this.list = [];\n\n    this.filterColors = this.filterColors.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // event listeners for tab, enter, escape, and click\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('mousedown', this.handleClickOutside);\n    document.addEventListener('mouseup', this.handleClick);\n  }\n\n  handleKeyDown(e) {\n    let inputEle = document.getElementsByTagName(\"input\")[0];\n    let liColorsEle = document.getElementsByClassName(\"each-color\");\n\n    if (e.key === \"Enter\") {\n      for (let i = 0; i < liColorsEle.length; i++) {\n        let li = liColorsEle[i];\n        if (document.activeElement === li) {\n          this.setState({\n            backgroundColor: li.getAttribute(\"id\").toLowerCase(),\n            input: li.getAttribute(\"id\"),\n          });\n          document.getElementsByTagName(\"input\")[0].focus();\n          break;\n        }\n      }\n    } else if (e.key === \"Tab\" && this.list.length) {\n      if ( document.activeElement === inputEle && this.list.length) {\n        setTimeout(() => liColorsEle[0].focus(), 1);\n      }\n    } else if (e.key === \"Escape\") {\n      document.activeElement.blur();\n      this.setState({ hideList: true });\n    }\n  }\n\n  handleClickOutside() {\n    let inputEle = document.getElementsByTagName(\"input\")[0];\n    let liColorsEle = Array.from(document.getElementsByClassName(\"each-color\"));\n    if (\n      document.activeElement !== inputEle && \n      !liColorsEle.some(l => l === document.activeElement)\n    ) {\n      this.setState({ hideList: true });\n    } \n  }\n  \n  handleClick() {\n    let liColorsEle = Array.from(document.getElementsByClassName(\"each-color\"))\n    if (liColorsEle.some((l) => l === document.activeElement)) {\n      for (let i = 0; i < liColorsEle.length; i++) {\n        let li = liColorsEle[i];\n        if (document.activeElement === li) {\n          this.setState({\n            backgroundColor: li.getAttribute(\"id\").toLowerCase(),\n            input: li.getAttribute(\"id\"),\n          });\n          document.getElementsByTagName(\"input\")[0].focus();\n          break;\n        }\n      }\n    }\n  }\n\n  update(field) {\n    return e => (\n      this.setState({ [field]: e.target.value })\n    )\n  }\n\n  filterColors() {\n    const { list } = this.props;\n    const { input } = this.state;\n    \n    let colorsList = null, errorMsg = null;\n    if (\n      input.length > 0 &&\n      input.split(\"\").some((char) => char !== \" \") &&\n      !list.some((l) => l === input)\n    ) {\n      let search = input.toLowerCase();\n      while (search.startsWith(\" \")) {\n        search = search.slice(1);\n      }\n\n      this.list = list.filter((l) => l.toLowerCase().startsWith(search));\n      colorsList = this.list.map((l, i) => {\n        let bold = l.slice(0, search.length);\n        let normal = l.slice(search.length);\n        return (\n          <li key={i} className=\"each-color\" tabIndex=\"0\" id={l}>\n            <span className=\"bold\">{bold}</span>\n            <span className=\"normal\">{normal}</span>\n          </li>\n        );\n      });\n\n      if (!colorsList.length) {\n        errorMsg = (\n          <span className=\"error\">\n            Oops! Looks like there are no colors that start with those letters.\n            Please try again.{\" \"}\n          </span>\n        );\n      }\n    }\n\n    return [colorsList, errorMsg];\n  }\n\n  handleFocus() {\n    if (document.getElementsByTagName(\"input\")[0] === document.activeElement) {\n      this.setState({ hideList: false });\n    }\n  }\n\n  render() {\n    const { input, backgroundColor, hideList } = this.state;\n    const [colorsList, errorMsg] = this.filterColors();\n   \n    return (\n      <section\n        className=\"background\"\n        style={{ backgroundColor: backgroundColor }}\n      >\n        <div className=\"container\">\n          <div className=\"main\">\n            <span className=\"title\">Welcome to Color Finder!</span>\n            <div className=\"instructions\">\n              <span>Instructions</span>\n              <span className=\"mouse\">\n                with mouse: click to select your color\n              </span>\n              <span className=\"keyboard\">\n                with keyboard: use <span>tab</span> and <span>shift+tab</span>\n              </span>\n              <span className=\"keyboard-row-2\">\n                use <span>enter</span> to select\n              </span>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Begin typing to find a color...\"\n              value={input}\n              className={\n                colorsList && colorsList.length && !hideList ? \"show-list\" : \"\"\n              }\n              onFocus={this.handleFocus}\n              onChange={this.update(\"input\")}\n            />\n            {colorsList && !hideList ? (\n              <ul className=\"colors-list\">{colorsList}</ul>\n            ) : null}\n            {errorMsg}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nTypeahead.propTypes = {\n  list: PropTypes.array,\n};\n\nexport default Typeahead;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Typeahead from './Typeahead.jsx';\n\nconst colorsList = [\n  \"AliceBlue\",\n  \"AntiqueWhite\",\n  \"Aqua\",\n  \"Aquamarine\",\n  \"Azure\",\n  \"Beige\",\n  \"Bisque\",\n  \"Black\",\n  \"BlanchedAlmond\",\n  \"Blue\",\n  \"BlueViolet\",\n  \"Brown\",\n  \"BurlyWood\",\n  \"CadetBlue\",\n  \"Chartreuse\",\n  \"Chocolate\",\n  \"Coral\",\n  \"CornflowerBlue\",\n  \"Cornsilk\",\n  \"Crimson\",\n  \"Cyan\",\n  \"DarkBlue\",\n  \"DarkCyan\",\n  \"DarkGoldenRod\",\n  \"DarkGray\",\n  \"DarkGrey\",\n  \"DarkGreen\",\n  \"DarkKhaki\",\n  \"DarkMagenta\",\n  \"DarkOliveGreen\",\n  \"DarkOrange\",\n  \"DarkOrchid\",\n  \"DarkRed\",\n  \"DarkSalmon\",\n  \"DarkSeaGreen\",\n  \"DarkSlateBlue\",\n  \"DarkSlateGray\",\n  \"DarkSlateGrey\",\n  \"DarkTurquoise\",\n  \"DarkViolet\",\n  \"DeepPink\",\n  \"DeepSkyBlue\",\n  \"DimGray\",\n  \"DimGrey\",\n  \"DodgerBlue\",\n  \"FireBrick\",\n  \"FloralWhite\",\n  \"ForestGreen\",\n  \"Fuchsia\",\n  \"Gainsboro\",\n  \"GhostWhite\",\n  \"Gold\",\n  \"GoldenRod\",\n  \"Gray\",\n  \"Grey\",\n  \"Green\",\n  \"GreenYellow\",\n  \"HoneyDew\",\n  \"HotPink\",\n  \"IndianRed\",\n  \"Indigo\",\n  \"Ivory\",\n  \"Khaki\",\n  \"Lavender\",\n  \"LavenderBlush\",\n  \"LawnGreen\",\n  \"LemonChiffon\",\n  \"LightBlue\",\n  \"LightCoral\",\n  \"LightCyan\",\n  \"LightGoldenRodYellow\",\n  \"LightGray\",\n  \"LightGrey\",\n  \"LightGreen\",\n  \"LightPink\",\n  \"LightSalmon\",\n  \"LightSeaGreen\",\n  \"LightSkyBlue\",\n  \"LightSlateGray\",\n  \"LightSlateGrey\",\n  \"LightSteelBlue\",\n  \"LightYellow\",\n  \"Lime\",\n  \"LimeGreen\",\n  \"Linen\",\n  \"Magenta\",\n  \"Maroon\",\n  \"MediumAquaMarine\",\n  \"MediumBlue\",\n  \"MediumOrchid\",\n  \"MediumPurple\",\n  \"MediumSeaGreen\",\n  \"MediumSlateBlue\",\n  \"MediumSpringGreen\",\n  \"MediumTurquoise\",\n  \"MediumVioletRed\",\n  \"MidnightBlue\",\n  \"MintCream\",\n  \"MistyRose\",\n  \"Moccasin\",\n  \"NavajoWhite\",\n  \"Navy\",\n  \"OldLace\",\n  \"Olive\",\n  \"OliveDrab\",\n  \"Orange\",\n  \"OrangeRed\",\n  \"Orchid\",\n  \"PaleGoldenRod\",\n  \"PaleGreen\",\n  \"PaleTurquoise\",\n  \"PaleVioletRed\",\n  \"PapayaWhip\",\n  \"PeachPuff\",\n  \"Peru\",\n  \"Pink\",\n  \"Plum\",\n  \"PowderBlue\",\n  \"Purple\",\n  \"RebeccaPurple\",\n  \"Red\",\n  \"RosyBrown\",\n  \"RoyalBlue\",\n  \"SaddleBrown\",\n  \"Salmon\",\n  \"SandyBrown\",\n  \"SeaGreen\",\n  \"SeaShell\",\n  \"Sienna\",\n  \"Silver\",\n  \"SkyBlue\",\n  \"SlateBlue\",\n  \"SlateGray\",\n  \"SlateGrey\",\n  \"Snow\",\n  \"SpringGreen\",\n  \"SteelBlue\",\n  \"Tan\",\n  \"Teal\",\n  \"Thistle\",\n  \"Tomato\",\n  \"Turquoise\",\n  \"Violet\",\n  \"Wheat\",\n  \"White\",\n  \"WhiteSmoke\",\n  \"Yellow\",\n  \"YellowGreen\",\n];\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const root = document.getElementById(\"root\")\n  ReactDOM.render(<Typeahead list={colorsList}/>, root)\n})\n"],"sourceRoot":""}